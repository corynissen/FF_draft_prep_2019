YUI.add("ysf-video-player", function(Y) {
    var players = {};

    Y.namespace('Fantasy');

    Y.Fantasy.VideoPlayer = {
        init: function(config) {
            if(config.overlay) {
                bindOverlayEvents(config);
            } else {
                createPlayer(config)
            }
        }
    }

    function createPlayer(config, triggeredBy) {
        var id = config.id;
        var playerConfig = config.video.config || {};
        var videoContainer = Y.one('#'+ id +'-container');

        // set UUIDs based on page elements
        playerConfig.playlist.mediaItems = getUUIDs(id, triggeredBy);

        // create player with config
        var player = players[id] = new YAHOO.VideoPlatform.VideoPlayer(playerConfig);

        // render video player to our container
        player.render(videoContainer);

        // Bind events to update video meta data
        player.on(window.YAHOO.VideoPlatform.API_Events.PLAYER_READY, function () {
            updateMeta(id);
        });

        player.on(window.YAHOO.VideoPlatform.API_Events.PLAYLIST_POSITION_CHANGE, function () {
            updateMeta(id);
        });
    }

    function bindOverlayEvents(config) {
        var id = config.id;
        
        // Bind Overlay Open
        Y.on("ysfoverlay:overlayopened", function(e) {
            var uuids = [];
            var triggeredBy = e.triggeredBy;
            var triggerUUID;

            // check we're looking at the correct overlay
            if(e.overlayname !== id) {
                return;
            }

            // create player with config
            createPlayer(config, triggeredBy);

        });

        // Bind Overlay Close
        Y.on("ysfoverlay:overlayclosed", function(e) { 
            // check we're looking at the correct overlay
            if(e.overlayname === id) {
                players[id].destroy();
            }
        });
    }

    function getUUIDs(id, triggeredBy) {
        var videoEls = Y.all('.yfa-' + id);
        var triggerUUID = triggeredBy ? triggeredBy.getData('video-id') : null;
        var uuids = [];

        // For all videos, construct uuids array 
        if(videoEls.size() > 0) {
            videoEls.each(function(el) {
                var videoUUID = el.getData('video-id');

                // Skip clicked video (needs to be first)
                if(videoUUID !== triggerUUID) {
                    uuids.push({
                        id: videoUUID
                    });
                }
            });

            // Put the clicked first
            if(triggerUUID) {
                uuids.unshift({
                    id: triggerUUID
                });    
            }
            
        }

        return uuids;
    }

    function updateMeta(id) {        
        var playerMetaEl = Y.one('#' + id + ' .player-meta');

        // If we're showing meta info
        if(playerMetaEl) {
            var meta = players[id].playlist.getCurrentItem();

            // Set Meta title and desc
            playerMetaEl.one('.player-meta-title').set('textContent', meta.title);
            playerMetaEl.one('.player-meta-desc').set('textContent', meta.description);

            // If there's a provider populate with data
            if (meta.provider) {
                playerMetaEl.one('.player-meta-provider').show();
                playerMetaEl.one('.player-meta-provider-link').set('href', meta.provider.providerUrl);
                playerMetaEl.one('.player-meta-provider-link').set('textContent', meta.provider.name);
            } else {
                playerMetaEl.one('.player-meta-provider').hide();
            }

        }
    }

}, "0.1", {requires: ["node", "event", "ysf-overlay"]});
